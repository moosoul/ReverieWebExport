[{"/Users/moosoul/Desktop/ReverieWebExport/src/index.js":"1","/Users/moosoul/Desktop/ReverieWebExport/src/serviceWorker.js":"2","/Users/moosoul/Desktop/ReverieWebExport/src/App.js":"3","/Users/moosoul/Desktop/ReverieWebExport/src/Reverie.js":"4","/Users/moosoul/Desktop/ReverieWebExport/src/utils.js":"5","/Users/moosoul/Desktop/ReverieWebExport/src/templates.js":"6"},{"size":481,"mtime":1705638091003,"results":"7","hashOfConfig":"8"},{"size":5086,"mtime":1705638091003,"results":"9","hashOfConfig":"8"},{"size":1850,"mtime":1705778414148,"results":"10","hashOfConfig":"8"},{"size":23078,"mtime":1705638090992,"results":"11","hashOfConfig":"8"},{"size":3800,"mtime":1705638091003,"results":"12","hashOfConfig":"8"},{"size":79813,"mtime":1705638091003,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"12tqwv",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":3,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/moosoul/Desktop/ReverieWebExport/src/index.js",["30"],"import React from 'react';\nimport ReactDOM, {findDOMNode} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#revery')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/Users/moosoul/Desktop/ReverieWebExport/src/serviceWorker.js",[],"/Users/moosoul/Desktop/ReverieWebExport/src/App.js",["31"],"import React, { Component } from \"react\";\nimport './frameStyle.css';\nimport { Helmet } from \"react-helmet\";\nimport Reverie from \"./Reverie\";\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nclass App extends Component {\n    constructor(props) {\n        /**\n         * isLoading - flag if product page is loading\n         * isUploadingImg - flag if uploading in progress\n         * wearingProducts - list of garment ids of the current generated image\n         * wearingCategories - list of categories for current generated image\n         * products - dictionary of all garment ids for default products\n         * uploadedProducts - dictionary of all garment ids for uploaded products\n         * models - list of model ids\n         * modelUrl - dictionary of model id to file url of model img on AWS\n         * segment - category of garment being viewed in segmented control\n         * gender - selected gender\n         * uploadPercentage - percentage of upload\n         */\n        super(props);\n        this.production = false; //TODO change to true\n        // this.endpoint = \"http://3.128.82.156:5002/\";\n        this.endpoint = \"https://stylespace.revery.ai/\"\n        this.visitorID = \"123456\";\n        this.fpVisitorID = \"\";\n        this.state = {\n            popup: false,\n            popupFooter: true,\n            isLoadingPage: false,\n            story_id: null,\n            story: {},\n            width: 0,\n            height: 0\n        };\n\n        // this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        window.toggleWidget = this.toggleWidget;\n    }\n\n    render() {\n        return <Reverie></Reverie>\n        // <Router>\n        //     <Routes>\n        //         <Route path=\"*\" element={<Reverie />}></Route>\n        //     </Routes>\n        // </Router>\n    }\n}\n\nexport default App;\n","/Users/moosoul/Desktop/ReverieWebExport/src/Reverie.js",["32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"import React, {Component} from \"react\";\nimport ReactGA from 'react-ga';\nimport FingerprintJS from '@fingerprintjs/fingerprintjs';\nimport {chunk, truncate, displayProductS3} from \"./utils\";\nimport './frameStyle.css';\nimport WebFont from 'webfontloader';\nimport {Helmet} from \"react-helmet\";\n\nimport {\n    collageTemplate,\n    publishedStoryJson,\n    testCollageJson,\n    testReverieJson,\n    testCollageReverieJson\n} from './templates'\n\nconst scrollbarWidth = 40;\n\nclass Reverie extends Component {\n    constructor(props) {\n        /**\n         * isLoading - flag if product page is loading\n         * isUploadingImg - flag if uploading in progress\n         * wearingProducts - list of garment ids of the current generated image\n         * wearingCategories - list of categories for current generated image\n         * products - dictionary of all garment ids for default products\n         * uploadedProducts - dictionary of all garment ids for uploaded products\n         * models - list of model ids\n         * modelUrl - dictionary of model id to file url of model img on AWS\n         * segment - category of garment being viewed in segmented control\n         * gender - selected gender\n         * uploadPercentage - percentage of upload\n         */\n        super(props);\n        this.production = false; //TODO change to true\n        // this.endpoint = \"http://3.128.82.156:5002/\";\n        this.endpoint = \"https://stylespace.revery.ai/\"\n        this.visitorID = \"123456\";\n        this.fpVisitorID = \"\";\n        this.state = {\n            popup: false,\n            popupFooter: true,\n            isLoadingPage: false,\n            story_id: null,\n            story: {},\n            width: 0,\n            height: 0\n        };\n\n        this.initialize = this.initialize.bind(this);\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        this.authenticate = this.authenticate.bind(this);\n        this.togglePopup = this.togglePopup.bind(this);\n        this.togglePopupFooter = this.togglePopupFooter.bind(this);\n        this.renderPopup = this.renderPopup.bind(this);\n        this.renderPage = this.renderPage.bind(this);\n        window.toggleWidget = this.toggleWidget;\n    }\n\n    async componentDidMount() {\n        let url = window.location.href;\n        var url_test = new URL(url);\n        // console.log(url_test.hostname, url_test.pathname);\n        let story_id = url_test.searchParams.get(\"story_id\");\n        // let story_id = url_test.pathname.split(\"/\")[1];\n        console.log(\"story id: \", story_id);\n        await this.initialize(story_id);\n\n        const fp = await FingerprintJS.load();\n\n        // The FingerprintJS agent is ready.\n        // Get a visitor identifier when you'd like to.\n        const result = await fp.get();\n\n        // This is the visitor identifier:\n        const visitorId = result.visitorId;\n        this.visitorID = visitorId;\n        this.fpVisitorID = visitorId;\n\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n\n    };\n\n    async authenticate(public_key, secret_key) {\n        var pbkdf2 = require('pbkdf2')\n        let time = parseInt(Date.now() / 1000);\n        var derivedKey = pbkdf2.pbkdf2Sync(secret_key, time.toString(), 128, 32, 'sha256');\n        derivedKey = derivedKey.toString('hex');\n        let header = new Headers({\n            \"public_key\": public_key,\n            \"one_time_code\": derivedKey,\n            \"timestamp\": time,\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n        })\n        await fetch(\n            this.endpoint + '/console/v1/verify_authentication',\n            {\n                method: 'POST',\n                headers: header,\n            }).then(response => response.json()).then((body) => {\n            if (!body.success) {\n                alert(\"Invalid credentials\")\n            } else {\n                this.setState({authenticated: true}, () => {\n                    this.initialize();\n                })\n            }\n        })\n    }\n\n    getAuthenticationHeader(json = false) {\n        var pbkdf2 = require('pbkdf2')\n        let time = parseInt(Date.now() / 1000);\n        var derivedKey = pbkdf2.pbkdf2Sync(this.secret_key, time.toString(), 128, 32, 'sha256');\n        derivedKey = derivedKey.toString('hex');\n        if (json) {\n            return new Headers({\n                \"public_key\": this.public_key,\n                \"one_time_code\": derivedKey,\n                \"timestamp\": time,\n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n            })\n        } else {\n            return new Headers({\n                \"public_key\": this.public_key,\n                \"one_time_code\": derivedKey,\n                \"timestamp\": time,\n            })\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        if (window.innerWidth < 767) {\n            this.setState({mobile: true});\n        } else {\n            this.setState({mobile: false});\n        }\n        let width = Math.min(window.innerWidth-10, 600)\n        let height = width * 4/3\n        this.setState({width: width, height: height});\n    }\n\n    componentDidUpdate() {\n        if (this.state.productIsLoading) {\n            if (this.state.step !== 2) {\n                this.setState({\n                    productIsLoading: false\n                });\n            } else {\n                if (document.getElementById(\"garmentOptions\").scrollTop === this.state.scrollCoords[this.state.segment]) {\n                    this.setState({\n                        productIsLoading: false\n                    });\n                }\n                document.getElementById(\"garmentOptions\").scrollTo(0, this.state.scrollCoords[this.state.segment]);\n            }\n        }\n    }\n\n    async initialize(story_id) {\n        if (story_id == undefined || story_id == \"\") {\n            // story_id = \"XhcAL94bda502f29c37ee8e9a964a44ce9a054e9248072a4970186bf37c427f9a35e02d5_41887355491501\";\n            story_id = \"XhcAL94bda502f29c37ee8e9a964a44ce9a054e9248072a4970186bf37c427f9a35e02d5_173865dccf0b14c8d321cfb0de7ee943\";\n        }\n        fetch(this.endpoint + \"get_story_by_id?id=\" + story_id, {\n            method: 'GET'\n        }).then(response => response.json()).then(body => {\n            if(body.success) {\n                console.log(\"get_story_by_id resopnse: \", body);\n                let story = body.published_story;\n                this.setState({\n                    story_id: story_id,\n                    story: story,\n                })\n            } else {\n                let story = publishedStoryJson.published_story;\n                this.setState({\n                    story_id: story_id,\n                    story: story,\n                })\n            }\n        }).catch((error) => {\n            let story = publishedStoryJson.published_story;\n            this.setState({\n                story_id: story_id,\n                story: story,\n            })\n        });\n\n    }\n\n    togglePopup() {\n        this.setState({\n            popup: this.state.popup? false: true,\n            popupFooter: this.state.popup? true: false,\n        })\n    }\n\n    togglePopupFooter() {\n        this.setState({\n            popupFooter: this.state.popup? true: false,\n        })\n    }\n\n\n    // Convert look to collage for rendering\n    renderLookWithTemplate(look) {\n        let myCollageTemplate = Object.assign({}, collageTemplate);\n        // let myCollageTemplate = collageTemplate;\n        let categoryToProduct = {}\n        for (let [productId, product] of Object.entries(look.products)){\n            if (!product.tryon.enabled) {\n                let category = product.tryon.category;\n                if (category in categoryToProduct) {\n                    categoryToProduct[category].push(product);\n                } else {\n                    categoryToProduct[category] = [product];\n                }\n            }\n        }\n\n        let newProducts = {};\n        let newLooks = {};\n        let newItems = [];\n\n        // if let bgAsset = look.backgroundAssetId, let backgroundURL = look.backgroundImageURL {\n        //     newItems.append(CollageItem(id: bgAsset, frame: CGRect(x: 0, y: 0, width: 1, height: 1), type: .asset, imageURL: backgroundURL))\n        // }\n\n        for (let i = 0; i < myCollageTemplate.items.length; i++) {\n            let item = Object.assign({}, myCollageTemplate.items[i]);\n            if (item.type == \"look\") {\n                item.id = look.look_id;\n                item.image_url = \"https://media.revery.ai/generated_model_image/\" + look.model_file + \".png\";\n                newLooks[item.id] = look;\n                newItems.push(item);\n            } else if (item.type == \"product\") {\n                let product = myCollageTemplate.products[item.id];\n                let productCategory = product.tryon.category;\n                if (productCategory in categoryToProduct && categoryToProduct[productCategory].length > 0) {\n                    let newProduct = Object.assign({}, categoryToProduct[productCategory].shift());\n                    item.id = newProduct.id;\n                    item.image_url = \"https://media.revery.ai/revery_client_images/\" + newProduct.id + \"/transparent_product.png\";\n                    newProducts[item.id] = newProduct;\n                    newItems.push(item);\n                }\n            }\n        }\n\n        // myCollageTemplate.id = \"\\(Int(Date().timeIntervalSince1970 * 194893))\"\n        myCollageTemplate.products = newProducts\n        myCollageTemplate.looks = newLooks\n        myCollageTemplate.items = newItems\n        // myCollageTemplate.createdTime = Date()\n        myCollageTemplate.userId = \"\"\n        return myCollageTemplate\n    }\n\n\n    renderReverie(reverieJson) {\n        console.log(\"REVERIE JSON: \", reverieJson);\n        // let reverieJson = testReverieJson;\n        return reverieJson.blocks.map((block)=>{\n            if (\"look\" in block){\n                return this.renderCollage(this.renderLookWithTemplate(block.look), block.width_divisor, block.height_divisor);\n            } else if (\"collage\" in block) {\n                return this.renderCollage(block.collage, block.width_divisor, block.height_divisor);\n            } else if (\"text\" in block) {\n                return this.renderText(block.text, block.width_divisor, block.height_divisor)\n            } else if (\"product\" in block) {\n                return this.renderProduct(block.product, block.width_divisor, block.height_divisor)\n            } else if (\"asset\" in block) {\n            return this.renderAsset(block.asset, block.width_divisor, block.height_divisor)\n            }\n        })\n    }\n\n    renderCollage(collageJson, width_divisor, height_divisor) {\n        let width = (this.state.width)/width_divisor - 10;\n        let height = (this.state.height)/height_divisor - 13.33;\n        return ([\n            <div className={\"reverieDiv\"}\n                 style={{\n                     \"width\": String(width) + \"px\",\n                     \"height\": String(height) + \"px\"\n                 }}\n            >\n                {collageJson[\"items\"].map((item) => (\n                    <div style={{\n                        \"position\": \"absolute\",\n                        \"margin-left\": String(width*item[\"frame\"][0][0]) + \"px\",\n                        \"margin-top\": String(height*item[\"frame\"][0][1]) + \"px\",\n                        \"width\": String(width*item[\"frame\"][1][0]) + \"px\",\n                        \"height\": String(height*item[\"frame\"][1][1]) + \"px\"\n                    }} name={\"item\"}>\n                        <img style={{\"width\": \"100%\", \"height\": \"100%\"}} src={item[\"image_url\"]}/>\n                    </div>\n                ))}\n            </div>\n        ])\n    }\n\n    renderText(textJson, width_divisor, height_divisor) {\n        let width = (this.state.width)/width_divisor - 10;\n        let height = (this.state.height)/height_divisor - 13.33;\n        console.log(\"font: \", textJson.font_name);\n\n        WebFont.load({\n            google: {\n                families: [textJson.font_name]\n            }\n        });\n\n        return ([\n            <div className={\"reverieDiv text\"}\n                 style={{\n                     \"width\": String(width) + \"px\",\n                     \"height\": String(height) + \"px\",\n                     \"color\": \"#\" + textJson.color_hex,\n                     \"font-family\": textJson.font_name,\n                     \"font-size\": textJson.font_size*this.state.width/textJson.phone_screen_width\n                 }}\n            >\n                {textJson.text}\n            </div>\n        ])\n    }\n\n    renderProduct(productJson, width_divisor, height_divisor) {\n        return([\n            <div className={\"reverieDiv product\"}\n                style={{\n                    \"width\": String((this.state.width)/width_divisor) + \"px\",\n                    \"height\": String((this.state.height-scrollbarWidth)/height_divisor) + \"px\"\n                }}\n            >\n                <img style={{\"width\": \"75%\", \"height\": \"75%\"}} src={productJson.image_urls.product_image}/>\n                <div className={\"productBrand\"}>\n                    {productJson.brand}\n                </div>\n                <div className={\"productPrice\"}>\n                    <span className={(productJson.price === productJson.discount_price ? \"same\" : \"\") + \" price\"}> <del>${chunk(productJson.price.toString())} </del> </span>\n                    <span className={(productJson.price === productJson.discount_price ? \"same\" : \"\") + \" discountedPrice\"}>${chunk(productJson.discount_price.toString())}</span>\n                </div>\n            </div>\n        ])\n    }\n\n    renderAsset(assetJson, width_divisor, height_divisor) {\n        console.log(\"asset json:\", assetJson);\n        let asset_src = \"https://revery-e-commerce-images.s3.us-east-2.amazonaws.com/media_assets/\" + assetJson.id;\n        return([\n            <div className={\"reverieDiv asset\"}\n                 style={{\n                     \"width\": String((this.state.width)/width_divisor) + \"px\",\n                     \"height\": String((this.state.height-scrollbarWidth)/height_divisor) + \"px\"\n                 }}\n            >\n                <img style={{\"min-width\": \"100%\", \"min-height\": \"100%\", \"object-fit\": \"cover\", \"object-position\": \"center\"}} src={asset_src}/>\n            </div>\n        ])\n    }\n\n    renderAccount(reverieJson) {\n        let heart_icon = \"https://revery-integration-tools.s3.us-east-2.amazonaws.com/images/reverie_like.svg\"\n        // let heart_icon = \"https://revery-integration-tools.s3.us-east-2.amazonaws.com/images/heart.svg\"\n        let comment_bubble = \"https://revery-integration-tools.s3.us-east-2.amazonaws.com/images/reverie_chat_bubble.svg\"\n        // let comment_bubble = \"https://revery-integration-tools.s3.us-east-2.amazonaws.com/images/bubble.svg\"\n        return([\n            <div className={\"reverieInfoStickyDiv\"}>\n                <div className={\"reverieInfoParentDiv\"} style={{\"width\": this.state.width}}>\n                    <div className={\"reverieInfoDiv\"}>\n                        <div className={\"accountDiv\"} onClick={this.togglePopup}>\n                            {\"@\" + reverieJson.creator_profile.name}\n                        </div>\n                        <div className={\"titleDiv\"}>\n                            {reverieJson.title}\n                        </div>\n                        <div className={\"captionDiv\"}>\n                            {reverieJson.caption}\n                        </div>\n                    </div>\n                    <div className={\"reverieIconsDiv\"}>\n                        <div className={\"heart-icon\"} onClick={this.togglePopup}>\n                            <img src={heart_icon}/>\n                            {reverieJson.like_count}\n                        </div>\n                        <div className={\"comment-icon\"} onClick={this.togglePopup}>\n                            <img src={comment_bubble}/>\n                            {reverieJson.comment_count}\n                        </div>\n                        <div className={\"profile-icon\"} onClick={this.togglePopup}>\n                            <img src={reverieJson.creator_profile.profile_url}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ])\n    }\n\n    renderProducts(reverieJson){\n        let blockLookIndex = [];\n        for (let i = 0; i < reverieJson.blocks.length; i++) {\n            if (\"look\" in reverieJson.blocks[i]) {\n                blockLookIndex.push(i);\n            }\n        }\n        if (blockLookIndex.length == 1) {\n            let product_ids = reverieJson.blocks[blockLookIndex[0]].look.product_ids.concat(reverieJson.blocks[blockLookIndex[0]].look.product_ids_non_tryon);\n            let product_metadata = reverieJson.blocks[blockLookIndex[0]].look.products;\n            return <div className=\"productFrame\" id=\"productFrame\">\n                {product_ids.map((product_id)=>(\n                    <div className={\"productImgDiv\"}>\n                        <a target=\"_blank\" href={product_metadata[product_id].url}>\n                            <img className={\"productImg\"} src={product_metadata[product_id].image_urls.product_image}/>\n                        </a>\n                    </div>\n                ))}\n            </div>\n        }\n        return\n    }\n\n    renderPopup() {\n        if (this.state.popup) {\n            return [\n                <div className={\"popupCover\"} onClick={this.togglePopup}></div>,\n                <div className={\"popup\"}>\n                    <div className={\"popupTitle\"}>\n                        Reverie\n                    </div>\n                    <div className={\"popupText\"}>\n                        Download Reverie to edit looks, explore fashion, and more!\n                    </div>\n                    <a target={\"_blank\"} href={\"https://apps.apple.com/us/app/style-space/id1535818149\"}><img className=\"popupImg\" src={\"https://revery-integration-tools.s3.us-east-2.amazonaws.com/images/download_app.svg\"}/></a>\n                    <div className=\"popupClose\" onClick={this.togglePopup}>&times;</div>\n                </div>\n            ]\n        }\n        return\n    }\n\n    renderPage() {\n        const {\n            width,\n            height,\n            popup,\n            isLoadingPage,\n            story\n        } = this.state;\n\n        // let reverieJson = testReverieJson;\n        // console.log(story);\n        let reverieJson = story;\n        // let collageJson = testCollageJson;\n        // let collageReverieJson = testCollageReverieJson\n        let reverieLogo = \"https://revery-integration-tools.s3.us-east-2.amazonaws.com/images/ReverieLogo.png\";\n        return ([\n            <div className=\"frame\" id=\"reveryFrame\" name=\"https://revery.ai\">\n                {/*<LinkPreview url='https://media.revery.ai/media_assets/XhcAL94bda502f29c37ee8e9a964a44ce9a054e9248072a4970186bf37c427f9a35e02d5_173865dccf0b14c8d321cfb0de7ee943' width='400px' />*/}\n                {/*<link rel=\"image_src\" href=\"\"/>*/}\n                <div className={(isLoadingPage) ? \"loadingCover\" : \"loadingCoverHidden\"}>\n                    <div className=\"loader\"></div>\n                </div>\n                <div className={\"title\"}>\n                    <img className=\"titleLogoImg\" src={reverieLogo}/>\n                </div>\n                {this.renderPopup()}\n                {/*<div className=\"garmentFrame\" id=\"garmentFrame\">*/}\n                {/*    {this.renderCollage(collageJson)}*/}\n                {/*</div>*/}\n                {/*<div className=\"garmentFrame\" id=\"garmentFrame\">*/}\n                {/*    {this.renderReverie(collageReverieJson)}*/}\n                {/*</div>*/}\n                <div className=\"garmentFrame\" style={{\"width\": width, \"height\": height}} id=\"garmentFrame\">\n                    {Object.keys(reverieJson).length > 0 ? this.renderAccount(reverieJson) : \"\"}\n                    {Object.keys(reverieJson).length > 0 ? this.renderReverie(reverieJson) : \"\"}\n                </div>\n                {Object.keys(reverieJson).length > 0 ? this.renderProducts(reverieJson): \"\"}\n                <div className=\"footerContainer\">\n                    <hr style={{\"marginTop\": \"10px\", \"width\": \"100%\"}}></hr>\n                    <div className={\"footerText\"}>\n                        © 2022 Reverie from Revery AI Inc.\n                    </div>\n                </div>\n                {this.state.popupFooter ?\n                    <div className=\"popupFooterContainer\">\n                        <div className={\"popupFooterDiv\"} style={{\"width\":width}}>\n                            <div className=\"popupFooterClose\" onClick={this.togglePopupFooter}>&times;</div>\n                            <div className={\"popupFooterTextDiv\"}>\n                                <div className={\"popupFooterTitle\"}>Download Reverie</div>\n                                <div className={\"popupFooterText\"}>Edit looks, explore fashion, and more!</div>\n                            </div>\n                            <a target={\"_blank\"} href={\"https://apps.apple.com/us/app/style-space/id1535818149\"}><img className=\"popupFooterImg\" src={\"https://revery-integration-tools.s3.us-east-2.amazonaws.com/images/download_app.svg\"}/></a>\n                        </div>\n                    </div> : \"\"\n                }\n            </div>,\n            // <LinkPreview url={'https://media.revery.ai/' + this.state.story_id} width='400px' />\n        ]);\n    }\n\n    render() {\n        const seo = {\n            title: 'About',\n            description: 'This is an awesome site that you definitely should check out.',\n            url: 'https://www.mydomain.com/about',\n            image: 'https://mydomain.com/images/home/logo.png',\n        }\n\n        if (this.state.story_id == null) {\n            return <></>\n        }\n\n        const story_preview = \"https://media.revery.ai/media_assets/\" + this.state.story_id;\n\n        return <>\n            <Helmet>\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n                <meta content=\"Download Reverie - Edit looks, explore fashion, and more!\" property=\"og:title\"/>\n                <meta content=\"Edit looks, explore fashion, and more!\" property=\"og:description\"/>\n                <meta content={story_preview} property=\"og:image\"/>\n                <meta content=\"Download Reverie - Edit looks, explore fashion, and more!\" property=\"twitter:title\"/>\n                <meta content=\"Edit looks, explore fashion, and more!\" property=\"twitter:description\"/>\n                <meta content={story_preview} property=\"twitter:image\"/>\n                <meta property=\"og:type\" content=\"website\"/>\n                <meta content=\"summary_large_image\" name=\"twitter:card\"/>\n                <meta content=\"width=device-width, initial-scale=1\" name=\"viewport\"/>\n            </Helmet>\n            {this.renderPage()}\n        </>\n    }\n}\n\nexport default Reverie;\n","/Users/moosoul/Desktop/ReverieWebExport/src/utils.js",["60","61","62","63","64","65"],"export class Product {\n    constructor(metadata) {\n        this.metadata = metadata;\n    }\n\n    getID() {\n        return this.metadata.id;\n    }\n\n    getCategory() {\n        return this.metadata.tryon.category;\n    }\n\n    getSubCategory() {\n        return this.metadata.tryon.bottoms_sub_category;\n    }\n\n    getGender() {\n        return this.metadata.gender;\n    }\n\n    getUrl() {\n        return this.metadata.url;\n    }\n\n    getProductImg() {\n        return this.metadata.image_urls.product_image;\n    }\n\n    getProductImgs() {\n        return this.metadata.image_urls;\n    }\n\n    getModelImg() {\n        return (this.metadata.image_urls[\"1\"]!==this.metadata.product_image) ? this.metadata.image_urls[\"1\"] : this.metadata.image_urls[\"2\"];\n    }\n\n    getBrand() {\n        return this.metadata.brand;\n    }\n\n    getPrice() {\n        if (this.metadata.in_stock) {\n            return this.metadata.price;\n        }\n        return \"out of stock\"\n    }\n\n    getDiscountedPrice() {\n        if (this.metadata.in_stock) {\n            return this.metadata.discount_price;\n        }\n        return this.metadata.discount_price;\n    }\n\n    getSizes() {\n        if (this.metadata.in_stock) {\n            return this.metadata.sizes;\n        }\n        return []\n    }\n\n    getTryonStatus() {\n        // itemTryon[item] = ( body.products[item].tryon === null ||  body.products[item].tryon === undefined) ? {\"enabled\": null} :  body.products[item].tryon;\n        if (this.metadata.tryon === null || this.metadata.tryon === undefined) {\n            return {\"enabled\": null}\n        } else {\n            return this.metadata.tryon\n        }\n    }\n\n    getPurchasableIDs() {\n        return this.metadata.purchasable_ids;\n    }\n}\n\nexport const chunk = (str)=> {\n      if (str === \"Out of stock\"){\n          return str\n      }\n    var ret = [];\n    var i;\n    var n = 3;\n\n    if (str.length > 1){\n        var cents = str.substr(str.length-2, str.length);\n        str = str.substr(0, str.length-2);\n    }\n\n    for(i = str.length-3; i >= -2; i -= n) {\n        if (i < 0){\n            ret.unshift(str.substr(0, n+i))\n        }\n        else{\n            ret.unshift(str.substr(i, n))\n        }\n    }\n    return ret.join(\" \");\n};\n\nexport const round = (num, places) => {\n    return Math.round(num*10.0)/10.0;\n}\n\nexport const truncate = (str) => {\n      var desired_length = 24;\n      str = str.replaceAll(\"<DOT>\", \".\");\n      str = str.replaceAll(\"<dot>\", \".\");\n      if (str.length > desired_length) {\n          return str.substr(0,desired_length); // + \"...\";\n      }\n      return str;\n}\n\nexport const fromHtmlEntities = (rawStr) => {\n    var retStr = rawStr.replace(/[\\u00A0-\\u9999<>\\&]/g, function(i) {\n       return '&#'+i.charCodeAt(0)+';';\n    })\n    return retStr;\n}\n\nexport const getCookie = (cname) => {\n    let name = cname + \"=\";\n    let decodedCookie = decodeURIComponent(document.cookie);\n    let ca = decodedCookie.split(';');\n    for(let i = 0; i <ca.length; i++) {\n        let c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}\n\nexport const getDisplayURL = (modelFile, intermediate_num) => {\n    if (intermediate_num == -1) {\n        return  \"https://media.revery.ai/debug_images/\" + modelFile + \".png\"\n    }\n    if (intermediate_num == 0) {\n        return  \"https://media.revery.ai/generated_model_image/\" + modelFile + \".png\"\n    }\n    return  \"https://media.revery.ai/generated_model_image/\" + modelFile + \"_intermediate_\" + intermediate_num.toString() + \".png\"\n}\n\n\nexport const displayProductS3 = (product_id) => {\n    return \"https://revery-e-commerce-images.s3.us-east-2.amazonaws.com/revery_client_images/\"+ product_id +\"/in_origin.png\"\n}","/Users/moosoul/Desktop/ReverieWebExport/src/templates.js",[],{"ruleId":"66","severity":1,"message":"67","line":2,"column":19,"nodeType":"68","messageId":"69","endLine":2,"endColumn":30},{"ruleId":"66","severity":1,"message":"70","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":16},{"ruleId":"66","severity":1,"message":"71","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":15},{"ruleId":"66","severity":1,"message":"72","line":4,"column":16,"nodeType":"68","messageId":"69","endLine":4,"endColumn":24},{"ruleId":"66","severity":1,"message":"73","line":4,"column":26,"nodeType":"68","messageId":"69","endLine":4,"endColumn":42},{"ruleId":"66","severity":1,"message":"74","line":12,"column":5,"nodeType":"68","messageId":"69","endLine":12,"endColumn":20},{"ruleId":"66","severity":1,"message":"75","line":13,"column":5,"nodeType":"68","messageId":"69","endLine":13,"endColumn":20},{"ruleId":"66","severity":1,"message":"76","line":14,"column":5,"nodeType":"68","messageId":"69","endLine":14,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":168,"column":22,"nodeType":"79","messageId":"80","endLine":168,"endColumn":24},{"ruleId":"77","severity":1,"message":"78","line":168,"column":47,"nodeType":"79","messageId":"80","endLine":168,"endColumn":49},{"ruleId":"66","severity":1,"message":"81","line":218,"column":19,"nodeType":"68","messageId":"69","endLine":218,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":239,"column":27,"nodeType":"79","messageId":"80","endLine":239,"endColumn":29},{"ruleId":"77","severity":1,"message":"78","line":244,"column":34,"nodeType":"79","messageId":"80","endLine":244,"endColumn":36},{"ruleId":"82","severity":1,"message":"83","line":270,"column":46,"nodeType":"84","messageId":"85","endLine":270,"endColumn":48},{"ruleId":"86","severity":1,"message":"87","line":303,"column":25,"nodeType":"88","endLine":303,"endColumn":99},{"ruleId":"86","severity":1,"message":"87","line":344,"column":17,"nodeType":"88","endLine":344,"endColumn":108},{"ruleId":"86","severity":1,"message":"87","line":366,"column":17,"nodeType":"88","endLine":366,"endColumn":143},{"ruleId":"86","severity":1,"message":"87","line":392,"column":29,"nodeType":"88","endLine":392,"endColumn":52},{"ruleId":"86","severity":1,"message":"87","line":396,"column":29,"nodeType":"88","endLine":396,"endColumn":56},{"ruleId":"86","severity":1,"message":"87","line":400,"column":29,"nodeType":"88","endLine":400,"endColumn":81},{"ruleId":"77","severity":1,"message":"78","line":415,"column":35,"nodeType":"79","messageId":"80","endLine":415,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":421,"column":25,"nodeType":"88","messageId":"91","endLine":421,"endColumn":84,"fix":"92"},{"ruleId":"86","severity":1,"message":"87","line":422,"column":29,"nodeType":"88","endLine":422,"endColumn":120},{"ruleId":"89","severity":1,"message":"90","line":442,"column":21,"nodeType":"88","messageId":"91","endLine":442,"endColumn":106,"fix":"93"},{"ruleId":"86","severity":1,"message":"87","line":442,"column":106,"nodeType":"88","endLine":442,"endColumn":225},{"ruleId":"66","severity":1,"message":"94","line":454,"column":13,"nodeType":"68","messageId":"69","endLine":454,"endColumn":18},{"ruleId":"86","severity":1,"message":"87","line":473,"column":21,"nodeType":"88","endLine":473,"endColumn":70},{"ruleId":"89","severity":1,"message":"90","line":501,"column":29,"nodeType":"88","messageId":"91","endLine":501,"endColumn":114,"fix":"95"},{"ruleId":"86","severity":1,"message":"87","line":501,"column":114,"nodeType":"88","endLine":501,"endColumn":239},{"ruleId":"66","severity":1,"message":"96","line":511,"column":15,"nodeType":"68","messageId":"69","endLine":511,"endColumn":18},{"ruleId":"66","severity":1,"message":"97","line":86,"column":13,"nodeType":"68","messageId":"69","endLine":86,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":116,"column":50,"nodeType":"100","messageId":"101","endLine":116,"endColumn":51,"suggestions":"102"},{"ruleId":"77","severity":1,"message":"78","line":128,"column":28,"nodeType":"79","messageId":"80","endLine":128,"endColumn":30},{"ruleId":"77","severity":1,"message":"78","line":131,"column":29,"nodeType":"79","messageId":"80","endLine":131,"endColumn":31},{"ruleId":"77","severity":1,"message":"78","line":139,"column":26,"nodeType":"79","messageId":"80","endLine":139,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":142,"column":26,"nodeType":"79","messageId":"80","endLine":142,"endColumn":28},"no-unused-vars","'findDOMNode' is defined but never used.","Identifier","unusedVar","'Helmet' is defined but never used.","'ReactGA' is defined but never used.","'truncate' is defined but never used.","'displayProductS3' is defined but never used.","'testCollageJson' is defined but never used.","'testReverieJson' is defined but never used.","'testCollageReverieJson' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'productId' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"103","text":"104"},{"range":"105","text":"104"},"'popup' is assigned a value but never used.",{"range":"106","text":"104"},"'seo' is assigned a value but never used.","'cents' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\&.","Literal","unnecessaryEscape",["107","108"],[17232,17232]," rel=\"noreferrer\"",[18051,18051],[21253,21253],{"messageId":"109","fix":"110","desc":"111"},{"messageId":"112","fix":"113","desc":"114"},"removeEscape",{"range":"115","text":"116"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"117","text":"118"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2660,2661],"",[2660,2660],"\\"]